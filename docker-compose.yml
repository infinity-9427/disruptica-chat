services:
  db:
    image: postgres:16-alpine
    container_name: fs-app-postgres
    env_file: [.env]
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fsapp}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-fsapp} -q"] 
      interval: 10s
      retries: 5
    restart: unless-stopped

  backend:
    build: 
      context: ./api
      dockerfile: Dockerfile
    container_name: fs-app-backend
    env_file: [.env]
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-fsapp}
      PORT: ${API_PORT:-8080}
    ports: 
      - "${API_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fs-app-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:${API_PORT:-8080}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data: